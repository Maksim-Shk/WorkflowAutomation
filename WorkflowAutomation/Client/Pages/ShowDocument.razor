@page "/ShowDocument/{Id:int}"
@using Microsoft.Extensions.Logging;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WorkflowAutomation.Application.Documents.Queries.GetOneDocument

@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject HttpClient httpClient



<EditForm Model="@getDocumentDto">
    <DataAnnotationsValidator />
    <h4>Сведения о документе @Id </h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Название документа
        </dt>
        <dd class="col-sm-10">
            @getDocumentDto.Title
        </dd>
        <dt class="col-sm-2">
            Отправитель
        </dt>
        <dd class="col-sm-10">
            <a href="UserInformation/@getDocumentDto.SenderId"> @getDocumentDto.SenderInfo </a>
        </dd>
        <dt class="col-sm-2">
            Получатель
        </dt>
        <dd class="col-sm-10">
            <a href="UserInformation/@getDocumentDto.RecieverId"> @getDocumentDto.RecieverInfo </a>
        </dd>
        <dt class="col-sm-2">
            Дата создания
        </dt>
        <dd class="col-sm-10">
            @getDocumentDto.CreateDate
        </dd>
        <dt class="col-sm-2">
            Дата удаления
        </dt>
        <dd class="col-sm-10">
            @getDocumentDto.RemoveDate
        </dd>


        <dt class="col-sm-2">
         Статус
        </dt>
        <dd class="col-sm-10">
            <p class="font-weight-bold">Здесь пока пусто</p>
        </dd>

        <hr/>
        <dt class="col-sm-2">
            Прикрепленный файл
        </dt>
        <dd class="col-sm-10">            
            <dl class="row">
                @foreach (var file in getDocumentDto.DocumentFiles)
            {
                    <a href="" @onclick="@(async()=> await FileDownload(file.Name, file.Id))" @onclick:preventDefault> @file.Name</a>
                 //<div>@file.Name</div>
                   
            }
             </dl>
        </dd>
        <hr />
        </dl>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    //Название, отправитель, получатаель. тип. дата создание. дата удаления(Если есть).приерпленные фаилы(как в мудле)
    DocumentDto getDocumentDto;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            getDocumentDto = new();
            getDocumentDto.DocumentFiles = new();
            getDocumentDto = await httpClient.GetFromJsonAsync<DocumentDto>("Document/GetDocument/" + Id);

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task FileDownload(string fileName,int id)
    {
        
            var fileStream = await httpClient.GetStreamAsync("/FileDownload/"+ id);
            using var streamRef = new DotNetStreamReference(stream: fileStream);

            await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
      
    }
}
