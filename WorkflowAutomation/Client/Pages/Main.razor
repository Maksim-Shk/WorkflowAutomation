@page "/main"

@using WorkflowAutomation.Application.Users.Queries.GetUserInfo
@using WorkflowAutomation.Application.Documents.Queries.GetRecentActivityDocuments

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]
<PageTitle>Документооборот ОГУ</PageTitle>

@if (!string.IsNullOrEmpty(getUserInfoDto.Name))
{
    <h1>Здравствуйте, @getUserInfoDto.Name  @getUserInfoDto.Surname  @getUserInfoDto.Patronymic</h1>
    <h2>@getUserInfoDto.SubdivisionName - @getUserInfoDto.PositonName</h2>
}
 <hr />
<h1>Последняя активность</h1>

@foreach (var activity in recentActivityDocumentListVm.RecentDocuments)
{
    <hr />
    <h5>@activity.Description</h5>

    <div> <a href="ShowDocument/@activity.Id">@activity.Content</a> - @activity.Date</div>
}
<hr />

@code{
    private RecentActivityDocumentListVm recentActivityDocumentListVm = new();
    private GetUserInfoDto getUserInfoDto = new();

    protected override async Task OnInitializedAsync()
    {
        recentActivityDocumentListVm.RecentDocuments = new List<RecentActivityDocumentLookupDto>();
        recentActivityDocumentListVm = await httpClient.GetFromJsonAsync<RecentActivityDocumentListVm>("ActivityDocument/RecentActivityDocument");
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            getUserInfoDto = await httpClient.GetFromJsonAsync<GetUserInfoDto>("UserInfo");
        }
    }
}
