@page "/SubdivisionsPage"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WorkflowAutomation.Application.Documents.Queries.GetSubdivisionList

@inject HttpClient Http

    <TreeView Nodes="Items"
          GetChildNodes="@(item => item.Children)"
          HasChildNodes="@(item => item.Children?.Any() == true)"
          @bind-SelectedNode="selectedNode"
          @bind-ExpandedNodes="expandedNodes">
    <NodeContent>
        <Icon Name="IconName.Superscript" />
        @context.Text
    </NodeContent>
    </TreeView>

@code{
    public class Item
    {
        public string Text { get; set; }
        public IEnumerable<Item> Children { get; set; }
    }

    IEnumerable<Item> Items = new[]
    {
        new Item { Text = "Ректор" },
        new Item
        {
            Text = "Перый проректор",
            Children = new []
            {
                new Item { Text = "Аэрокосмический институт" },
                new Item
                {
                    Text = "Факультете математики и информационных технологии ",
                    Children = new []
                    {
                        new Item { Text = "Кафедра программного обеспечения вычислительной техники и автоматизированных систем" },
                        new Item { Text = "Кафедра информатики" },
                        new Item { Text = "Кафедра прикладной математики" },
                        new Item { Text = "Кафедра геометрии и компьютерных наук" }
                    }
                },
                new Item { Text = "Факультет филологии" },
                new Item { Text = "Физический факультет" }
            }
        },
        new Item { Text = "Проректор по научной работе" },
    };

    IList<Item> expandedNodes = new List<Item>();
    Item selectedNode;

    private SubdivisionListVm subdivisionListVm = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subdivisionListVm.Subdivisions = new List<SubdivisionListLookupDto>();
            

            subdivisionListVm = await Http.GetFromJsonAsync<SubdivisionListVm>("Subdivision");
            

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}