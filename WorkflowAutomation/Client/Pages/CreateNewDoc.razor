@page "/CreateNewDoc"
@using Microsoft.Extensions.Logging;
@using System.ComponentModel.DataAnnotations;
@inject ILogger<Test> Logger
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using WorkflowAutomation.Application.Documents.Queries.GetSubdivisionList
@using WorkflowAutomation.Shared
@using WorkflowAutomation.Application.Documents.Commands.CreateNewDocument
@using WorkflowAutomation.Application.DocType.Queries.GetDocumentTypeListQuery
@using WorkflowAutomation.Application.Users.Queries.GetAllowedUsers
@attribute [Authorize]
@inject HttpClient Http


<EditForm Model="@createNewDocumentDto" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h3>Создать новый документ</h3>
    <h6>Введите название документа</h6>
    <h6>Тема</h6>

    <InputText id="Title" @bind-Value="createNewDocumentDto.Title" />

    <h6>Выберите получателя</h6>
    <InputSelect id="selectAllowedUsers" class="form-control" @bind-Value="@createNewDocumentDto.ReceiverUserId">

        @foreach (var doc in allowedUsers.AllowedUsers)
        {
            <option value="@doc.Id"> @doc.Name @doc.Surname @doc.Patronymic @doc.SubdivisionName @doc.PositonName </option>
        }
    </InputSelect>

    <h6>Выберите тип документа</h6>
    <InputSelect id="selectedDocTypes" class="form-control" @bind-Value="@createNewDocumentDto.DocumentTypeId">

        @foreach (var doc in docTypes.DocumentTypes)
        {
            <option value="@doc.Id"> @doc.Name</option>
        }
    </InputSelect>

    <br />
</EditForm>
<br />

@code {
    // DocTypeDto docTypeDto = new DocTypeDto();
    CreateNewDocumentDto createNewDocumentDto = new CreateNewDocumentDto();

    private DocumentTypeListVm docTypes = new();
    private AllowedUserListVm allowedUsers = new();

    protected override async Task OnInitializedAsync()
    {
        docTypes.DocumentTypes = new List<DocumentTypeListLookupDto>();
        allowedUsers.AllowedUsers = new List<GetAllowedUserListDto>();

        docTypes = await Http.GetFromJsonAsync<DocumentTypeListVm>("DocumentType");
        allowedUsers = await Http.GetFromJsonAsync<AllowedUserListVm>("GetAllowedUsers");

    }
    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");
    }
}


