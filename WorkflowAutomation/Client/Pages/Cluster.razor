@page "/Cluster"

@using WorkflowAutomation.Application.Documents.Queries.GetDocumentList

@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.ComponentModel.DataAnnotations

@inject HttpClient Http
@inject NavigationManager NavigationManager

@*<button type="submit" class="btn btn-primary">Визуализированные данные</button>*@

<PageTitle>Кластерный анализ</PageTitle>

<h3>Просмотр документов</h3>

<EditForm Model="@documentListVm">
    <DataAnnotationsValidator />

    <table class="table">
        <thead>
            <tr>
                <th>Номер</th>
                <th>Тема</th>
                <th>Время выполнения</th>
                <th>Время проверки</th>
                <th>Класс документа</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var doc in Clusters)
            {
                <tr>
                    <td>@doc.Id</td>
                    <td>@doc.Title</td>
                    <td>@doc.DateWork</td>
                    <td>@doc.DateCheck</td>
                    <td>@doc.DocClass</td>
                </tr>
            }
        </tbody>
    </table>

</EditForm>
@code {

    //заглушка для кластерного анализа
    DocumentListVm documentListVm = new();

    public class ClusterClass
    {
        public int Id{ get; set; }
        public string Title{ get; set; }
        public string DateWork { get; set; }
        public string DateCheck { get; set; }
        public string DocClass{ get; set; }
    }

    public List<ClusterClass> Clusters;
    protected override async Task OnInitializedAsync()
    {
        Clusters = new List<ClusterClass>();
        try
        {
            Clusters.Add(new ClusterClass { Id = 1, Title = "Документ 1", DateWork = "73 ч", DateCheck = "48 ч", DocClass = "Долгая работа, долгая проверка" });
            Clusters.Add(new ClusterClass { Id = 12, Title = "Документ 12", DateWork = "79 ч", DateCheck = "46 ч", DocClass = "Долгая работа, долгая проверка" });
            Clusters.Add(new ClusterClass { Id = 3, Title = "Документ 3", DateWork = "50 ч", DateCheck = "8 ч", DocClass = "Долгая работа, быстрая проверка" });
            Clusters.Add(new ClusterClass { Id = 44, Title = "Документ 44", DateWork = "59 ч", DateCheck = "12 ч", DocClass = "Долгая работа, быстрая проверка" });
            Clusters.Add(new ClusterClass { Id = 14, Title = "Документ 14", DateWork = "32 ч", DateCheck = "42 ч", DocClass = "Быстрая работа, долгая проверка" });
            Clusters.Add(new ClusterClass { Id = 2, Title = "Документ 2", DateWork = "29 ч", DateCheck = "47 ч", DocClass = "Быстрая работа, долгая проверка" });
            Clusters.Add(new ClusterClass { Id = 11, Title = "Документ 11", DateWork = "20 ч", DateCheck = "4 ч", DocClass = "Быстрая работа, быстрая проверка" });
            Clusters.Add(new ClusterClass { Id = 50, Title = "Документ 50", DateWork = "12 ч", DateCheck = "12 ч", DocClass = "Быстрая работа, быстрая проверка" });
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}
